{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "# This is an h1 heading\n`<csak-tree-item>` is a items for <csak-tree>   \nIn typical use, just put some `<csak-tree-item>` into `<csak-tree>`   \n<csak-tree>\n  <csak-tree-item>First item</csak-tree-item>\n</csak-tree>\nWham! It's all awesome now!\n\n## Styling\n\n Custom property | Description | Default\n ----------------|-------------|---------\n --csak-tree-item-indent | Items indent value | 1em\n --iron-icon-width | Inherited css variable | 16px",
      "summary": "",
      "path": "csak-tree-item.html",
      "properties": [
        {
          "name": "_id",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 20
            },
            "end": {
              "line": 95,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "icon",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 20
            },
            "end": {
              "line": 96,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_icon",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 20
            },
            "end": {
              "line": 97,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_iconsrc",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 20
            },
            "end": {
              "line": 98,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "text",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_textChange\""
            }
          }
        },
        {
          "name": "visible",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 20
            },
            "end": {
              "line": 107,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_visibleChange\""
            }
          }
        },
        {
          "name": "expanded",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 20
            },
            "end": {
              "line": 112,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_expandedChange\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "branchicon",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 20
            },
            "end": {
              "line": 113,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "branchiconopen",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 20
            },
            "end": {
              "line": 114,
              "column": 42
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "leaficon",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 20
            },
            "end": {
              "line": 115,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "isleaf",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 20
            },
            "end": {
              "line": 120,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isleafChange\""
            }
          }
        },
        {
          "name": "roottree",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 20
            },
            "end": {
              "line": 121,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "parentitem",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 20
            },
            "end": {
              "line": 122,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "selected",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 20
            },
            "end": {
              "line": 127,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_selectedChange\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "visibleIcon",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 20
            },
            "end": {
              "line": 132,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "locked",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 20
            },
            "end": {
              "line": 139,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_lockedChange\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_targetelement",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 20
            },
            "end": {
              "line": 141,
              "column": 42
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "targetelement",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 20
            },
            "end": {
              "line": 147,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_targetelementChange\""
            }
          }
        },
        {
          "name": "_hidedefaultcomps",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 20
            },
            "end": {
              "line": 153,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 12
            },
            "end": {
              "line": 159,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 12
            },
            "end": {
              "line": 178,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "hideDefaultComps",
          "description": "Hide all default components (its need when you want css style outside)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 12
            },
            "end": {
              "line": 188,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_selectedChange",
          "description": "Fired when _selected prop change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 12
            },
            "end": {
              "line": 201,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        },
        {
          "name": "setSelected",
          "description": "Set select this element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 12
            },
            "end": {
              "line": 228,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "bool",
              "type": "any"
            }
          ]
        },
        {
          "name": "expandParents",
          "description": "Expand parent item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 12
            },
            "end": {
              "line": 243,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setDefaultIcons",
          "description": "Set defualt icon for this item",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 12
            },
            "end": {
              "line": 254,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "rootparentchanged",
          "description": "Fired when root parent is changed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 12
            },
            "end": {
              "line": 273,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "roottree",
              "type": "CsakTree"
            }
          ]
        },
        {
          "name": "notifyChildren",
          "description": "Notify children when root parent is changed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 12
            },
            "end": {
              "line": 292,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {}
        },
        {
          "name": "moveContent",
          "description": "Move sub components to the right slots and set text property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 12
            },
            "end": {
              "line": 322,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {}
        },
        {
          "name": "_handleClick",
          "description": "User click event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 12
            },
            "end": {
              "line": 354,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "any"
            }
          ]
        },
        {
          "name": "_styleShow",
          "description": "Show this sitem",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 12
            },
            "end": {
              "line": 366,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_styleHide",
          "description": "Hide this item",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 12
            },
            "end": {
              "line": 376,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "update",
          "description": "Update this element and show or hide",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 12
            },
            "end": {
              "line": 391,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "expandOneChild",
          "description": "Expand only one level",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 399,
              "column": 12
            },
            "end": {
              "line": 412,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {}
        },
        {
          "name": "collapseChildren",
          "description": "Collapse children",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 12
            },
            "end": {
              "line": 428,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "expandChildren",
          "description": "Expand children",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 435,
              "column": 12
            },
            "end": {
              "line": 446,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "hideChildren",
          "description": "Hide children",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 454,
              "column": 12
            },
            "end": {
              "line": 468,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {}
        },
        {
          "name": "_textChange",
          "description": "/Not implmented/",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 477,
              "column": 12
            },
            "end": {
              "line": 481,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        },
        {
          "name": "_visibleChange",
          "description": "If visible change then update this element",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 490,
              "column": 12
            },
            "end": {
              "line": 492,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        },
        {
          "name": "updateChildren",
          "description": "Call all update method on children",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 500,
              "column": 12
            },
            "end": {
              "line": 514,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {}
        },
        {
          "name": "_expandedChange",
          "description": "Fired when expanded prop is changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 524,
              "column": 12
            },
            "end": {
              "line": 542,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ],
          "return": {}
        },
        {
          "name": "setIcon",
          "description": "Set icon for this element state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 558,
              "column": 12
            },
            "end": {
              "line": 579,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {}
        },
        {
          "name": "_isleafChange",
          "description": "If isleaf parameter si changed change icon",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 589,
              "column": 12
            },
            "end": {
              "line": 591,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        },
        {
          "name": "lock",
          "description": "Lock item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 599,
              "column": 12
            },
            "end": {
              "line": 606,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "any"
            }
          ]
        },
        {
          "name": "_lockedChange",
          "description": "If locked prop is changed add css class locked, otherwise remove it",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 616,
              "column": 12
            },
            "end": {
              "line": 622,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        },
        {
          "name": "_targetelementChange",
          "description": "Targetelement chenged",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 632,
              "column": 12
            },
            "end": {
              "line": 635,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 71,
          "column": 8
        },
        "end": {
          "line": 649,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CsakTreeItem",
      "attributes": [
        {
          "name": "icon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 20
            },
            "end": {
              "line": 96,
              "column": 32
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "text",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "visible",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 20
            },
            "end": {
              "line": 107,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "expanded",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 20
            },
            "end": {
              "line": 112,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "branchicon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 20
            },
            "end": {
              "line": 113,
              "column": 38
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "branchiconopen",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 20
            },
            "end": {
              "line": 114,
              "column": 42
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "leaficon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 20
            },
            "end": {
              "line": 115,
              "column": 36
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "isleaf",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 20
            },
            "end": {
              "line": 120,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "roottree",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 20
            },
            "end": {
              "line": 121,
              "column": 36
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "parentitem",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 20
            },
            "end": {
              "line": 122,
              "column": 38
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "selected",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 20
            },
            "end": {
              "line": 127,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "visible-icon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 20
            },
            "end": {
              "line": 132,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "locked",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 20
            },
            "end": {
              "line": 139,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "targetelement",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 20
            },
            "end": {
              "line": 147,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "_selected",
          "description": "_selected property change",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "N/A",
          "description": "Targetelement chenged",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "text-changed",
          "description": "Fired when the `text` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "isleaf-changed",
          "description": "Fired when the `isleaf` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "visible-icon-changed",
          "description": "Fired when the `visibleIcon` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "locked-changed",
          "description": "Fired when the `locked` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "targetelement-changed",
          "description": "Fired when the `targetelement` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "csak-tree-item.html",
            "start": {
              "line": 45,
              "column": 8
            },
            "end": {
              "line": 45,
              "column": 21
            }
          }
        },
        {
          "description": "",
          "name": "csaktreeitemslot",
          "range": {
            "file": "csak-tree-item.html",
            "start": {
              "line": 46,
              "column": 8
            },
            "end": {
              "line": 46,
              "column": 45
            }
          }
        }
      ],
      "tagname": "csak-tree-item"
    },
    {
      "description": "# cak-tree tree component\nIn typical use, just put some `<csak-tree-item>` into `<csak-tree>`   \n<csak-tree>\n  <csak-tree-item>First item</csak-tree-item>\n</csak-tree>\nWham! It's all awesome now!\n\n## Styling\n\n Custom property | Description | Default\n ----------------|-------------|---------\n --csak-tree-item-indent | Items indent value | 1em\n --iron-icon-width | Inherited css variable | 16px",
      "summary": "",
      "path": "csak-tree.html",
      "properties": [
        {
          "name": "branchicon",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "branchiconopen",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "leaficon",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 57,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "visible",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_visibleChange\""
            }
          }
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 10
            },
            "end": {
              "line": 66,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_selectedItemChange\""
            }
          }
        },
        {
          "name": "locked",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_lockedChange\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "expanded",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 77,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_expandedChange\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_currenttargetelement",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 10
            },
            "end": {
              "line": 78,
              "column": 39
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "targetcssclass",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"targeted\""
        },
        {
          "name": "data",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_dataChange\""
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "setSelectedItem",
          "description": "Set selected item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "CsakTreeItem",
              "description": "The element"
            },
            {
              "name": "bool",
              "type": "boolean",
              "description": "Set selected or not"
            }
          ]
        },
        {
          "name": "_selectedItemChange",
          "description": "_selectedItem change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        },
        {
          "name": "_visibleChange",
          "description": "_visible change event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 159,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "notifyChildren",
          "description": "Notify children for rootparent change",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleClick",
          "description": "Mouse click event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "any"
            }
          ]
        },
        {
          "name": "expandAll",
          "description": "Expand children",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "collapseAll",
          "description": "Collapse children",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 6
            },
            "end": {
              "line": 233,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_lockedChange",
          "description": "Lock tree (prevent user action)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 6
            },
            "end": {
              "line": 249,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        },
        {
          "name": "_expandedChange",
          "description": "Expanded prop changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        },
        {
          "name": "_processData",
          "description": "Build tree from json",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "json",
              "type": "JSon"
            },
            {
              "name": "parent",
              "type": "(CsakTree|CsakTreeItem)"
            }
          ]
        },
        {
          "name": "_dataChange",
          "description": "When set data prop then fire _processData method",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "any"
            },
            {
              "name": "oldValue",
              "type": "any"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "https://csakaszamok.github.io/csak-tree/demo/demo_treemenu.html",
          "description": ""
        },
        {
          "url": "https://csakaszamok.github.io/csak-tree/demo/demo_classici.html",
          "description": ""
        },
        {
          "url": "https://csakaszamok.github.io/csak-tree/demo/demo_classicii.html",
          "description": ""
        },
        {
          "url": "https://csakaszamok.github.io/csak-tree/demo/demo_events.html",
          "description": ""
        },
        {
          "url": "https://csakaszamok.github.io/csak-tree/demo/demo_image.html",
          "description": ""
        },
        {
          "url": "https://csakaszamok.github.io/csak-tree/demo/demo_vscode.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 51,
          "column": 4
        },
        "end": {
          "line": 350,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CsakTree",
      "attributes": [
        {
          "name": "branchicon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 10
            },
            "end": {
              "line": 55,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "branchiconopen",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 56,
              "column": 32
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "leaficon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 10
            },
            "end": {
              "line": 57,
              "column": 26
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "visible",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 10
            },
            "end": {
              "line": 61,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "selected-item",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 10
            },
            "end": {
              "line": 66,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "locked",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 10
            },
            "end": {
              "line": 72,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "expanded",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 10
            },
            "end": {
              "line": 77,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "targetcssclass",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 10
            },
            "end": {
              "line": 82,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "data",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 10
            },
            "end": {
              "line": 88,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "N/A",
          "description": "Lock tree (prevent user action)",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "locked-changed",
          "description": "Fired when the `locked` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "data-changed",
          "description": "Fired when the `data` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "csak-tree.html",
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 19,
              "column": 27
            }
          }
        }
      ],
      "tagname": "csak-tree"
    }
  ]
}
